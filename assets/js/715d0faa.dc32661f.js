"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[124],{5116:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>m,contentTitle:()=>h,default:()=>p,frontMatter:()=>d,metadata:()=>u,toc:()=>f});var r=o(4848),s=o(8453),t=o(6540),i=o(9851),a=o(7058),c=o(9292);function l(){const e=(0,t.useRef)(),{transform:n}=(0,a.f4)(e,{zoomExtent:[1,10]}),{scaled:o}=(0,a.My)({domain:i.b8,range:[0,300],direction:"x",transform:n}),{scaled:s}=(0,a.My)({domain:i.iK,range:[300,0],direction:"y",transform:n});return(0,r.jsx)(c.o,{children:(0,r.jsx)(a.Pg,{ref:e,children:(0,r.jsx)(i.fB,{xScale:o,yScale:s,selection:[]})})})}const d={},h=void 0,u={id:"hooks/useZoom",title:"useZoom",description:"Demo",source:"@site/docs/hooks/useZoom.mdx",sourceDirName:"hooks",slug:"/hooks/useZoom",permalink:"/hyprvis/hooks/useZoom",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"usePan",permalink:"/hyprvis/hooks/usePan"},next:{title:"Demo",permalink:"/hyprvis/category/demo"}},m={},f=[{value:"Demo",id:"demo",level:3},{value:"Usage",id:"usage",level:3},{value:"API",id:"api",level:3},{value:"<code>value</code>",id:"value",level:4},{value:"<code>onChange</code>",id:"onchange",level:4},{value:"<code>direction</code>",id:"direction",level:4},{value:"<code>constraint</code>",id:"constraint",level:4}];function x(e){const n={code:"code",h3:"h3",h4:"h4",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h3,{id:"demo",children:"Demo"}),"\n",(0,r.jsx)(n.p,{children:"Use the wheel to zoom onto the datasaurus."}),"\n",(0,r.jsx)(l,{}),"\n",(0,r.jsx)(n.h3,{id:"usage",children:"Usage"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-tsx",children:'import { useRef } from "react";\nimport { Center } from "../Center";\nimport { TransformTester } from "../TransformTester";\nimport { Brushable } from "../Brushable";\nimport { useZoom } from "hyprvis";\n\nexport function ZoomUsage () {\n    const interactionRef = useRef();\n    const { value } = useZoom(interactionRef);\n\n    return <Center>\n        <Brushable ref={interactionRef}>\n            <TransformTester zoom={value} />\n        </Brushable>\n    </Center>\n}\n'})}),"\n",(0,r.jsx)(n.h3,{id:"api",children:"API"}),"\n",(0,r.jsx)(n.h4,{id:"value",children:(0,r.jsx)(n.code,{children:"value"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"value?: ZoomTransform\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Optional value that can be used to control the ",(0,r.jsx)(n.code,{children:"useZoom"})," hook in conjunction with ",(0,r.jsx)(n.code,{children:"onChange"}),"."]}),"\n",(0,r.jsx)(n.h4,{id:"onchange",children:(0,r.jsx)(n.code,{children:"onChange"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"onChange?: (value: ZoomTransform) => void\n"})}),"\n",(0,r.jsx)(n.p,{children:"Event that is fired whenever the zoom changes. This is useful for controlling the state of this hook."}),"\n",(0,r.jsx)(n.h4,{id:"direction",children:(0,r.jsx)(n.code,{children:"direction"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"direction?: 'x' | 'y' | 'xy'\n"})}),"\n",(0,r.jsx)(n.p,{children:"Restricts the orientation of the zoom to the given axis. Useful when zooming on scales for instance."}),"\n",(0,r.jsx)(n.h4,{id:"constraint",children:(0,r.jsx)(n.code,{children:"constraint"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"constraint?: (transform: ZoomTransform) => ZoomTransform\n"})}),"\n",(0,r.jsx)(n.p,{children:"The constraint that is applied on the transform. The default constraint will force it to be withing the extent (width, height)."})]})}function p(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(x,{...e})}):x(e)}},9292:(e,n,o)=>{o.d(n,{o:()=>s});var r=o(4848);function s(e){let{children:n}=e;return(0,r.jsx)("div",{style:{display:"flex",justifyContent:"center",alignItems:"center",padding:16},children:n})}}}]);